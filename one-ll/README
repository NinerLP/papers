Sources for paper. Require sbt (http://www.scala-sbt.org/) to compile and run.

NB! matrix.Runner is a mess, and needs manual adjustment to launch actually required algorithms

Use sbt run to launch experiments with default parameters same to the ones in the paper.

Use sbt "run [options]" to run optimization algorithms with different values. Number of runs determines how many times each optimization algorithm should be ran.
Options: 
  -d <value> | --dinic <value>
        number of runs of each algorithm with Dinic algorithm fitness function
  -i <value> | --isp <value>
        number of runs of each algorithm with Improved Shortest Path algorithm fitness function
  -v <value> | --maxV <value>
        number of vertices
  -c <value> | --maxC <value>
        maximum capacity
  -e <value> | --maxE <value>
        number of edges
  -a <value> | --acyclic <value>
        generate acyclic graphs
  -l <value> | --limit <value>
        fitness computations limit
  --lambda <lambda1>,<lambda2>...
        list lambda values for 1+(lambda,lambda) algorithm
  --help
        prints usage text


Results will be located in ./logs and ./tests folders.
Log files are called %FitnessAlgorithm%_%RunID%_%OptimizationAlgorithm%.txt and contain number of computation and best fitness value at that moment.
Test files are called %BestFitnessValue%_%FitnessAlgorithm%_%RunID%_%OptimizationAlgorithm OptimizationOperator%.txt and contain:
* Fitness algorithm
* Optimization algorithm and operator on which the best fitness value was achieved
* Some values for specific fitness algorithm
* Fitness value (edgeCount)
* Generated test as a list of source and target for edges